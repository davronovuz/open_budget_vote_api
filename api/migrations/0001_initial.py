# Generated by Django 5.2.5 on 2025-08-21 16:19

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ob_project_id', models.CharField(max_length=64)),
                ('title', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=1024)),
                ('region', models.CharField(blank=True, max_length=128, null=True)),
                ('district', models.CharField(blank=True, max_length=128, null=True)),
                ('category', models.CharField(blank=True, max_length=128, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('reward_sum', models.IntegerField(default=0)),
                ('target_votes', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'projects',
                'indexes': [models.Index(fields=['is_active'], name='ix_projects_active'), models.Index(fields=['category'], name='ix_projects_category')],
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('default_reward_sum', models.IntegerField(default=0)),
                ('allow_multiple_active_projects', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('active_project', models.ForeignKey(db_column='active_project_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.project')),
            ],
            options={
                'db_table': 'settings',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('telegram_id', models.BigIntegerField(db_index=True)),
                ('user_phone_id', models.IntegerField(blank=True, null=True)),
                ('phone_snapshot', models.CharField(max_length=24)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('OTP_REQUIRED', 'OTP_REQUIRED'), ('PROCESSING', 'PROCESSING'), ('SUCCESS', 'SUCCESS'), ('FAILED', 'FAILED')], default='PENDING', max_length=24)),
                ('attempt_count', models.IntegerField(default=0)),
                ('selenium_session_id', models.CharField(blank=True, max_length=128, null=True)),
                ('ob_vote_id', models.CharField(blank=True, max_length=64, null=True)),
                ('proof_screenshot_path', models.CharField(blank=True, max_length=1024, null=True)),
                ('error_message', models.CharField(blank=True, max_length=512, null=True)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('project', models.ForeignKey(db_column='project_id', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='api.project')),
            ],
            options={
                'db_table': 'votes',
            },
        ),
        migrations.CreateModel(
            name='SeleniumJob',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('QUEUED', 'QUEUED'), ('RUNNING', 'RUNNING'), ('DONE', 'DONE'), ('FAILED', 'FAILED')], default='QUEUED', max_length=16)),
                ('node', models.CharField(blank=True, max_length=64, null=True)),
                ('timings', models.JSONField(blank=True, null=True)),
                ('error', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('vote', models.ForeignKey(db_column='vote_id', on_delete=django.db.models.deletion.CASCADE, related_name='selenium_jobs', to='api.vote')),
            ],
            options={
                'db_table': 'seleniumjobs',
            },
        ),
        migrations.CreateModel(
            name='OtpAttempt',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code_entered', models.CharField(max_length=16)),
                ('result', models.CharField(choices=[('OK', 'OK'), ('WRONG', 'WRONG'), ('EXPIRED', 'EXPIRED'), ('ERROR', 'ERROR')], max_length=16)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('vote', models.ForeignKey(db_column='vote_id', on_delete=django.db.models.deletion.CASCADE, related_name='otp_attempts', to='api.vote')),
            ],
            options={
                'db_table': 'otpattempts',
            },
        ),
        migrations.AddIndex(
            model_name='vote',
            index=models.Index(fields=['project', 'status'], name='ix_votes_project_status'),
        ),
        migrations.AddIndex(
            model_name='vote',
            index=models.Index(fields=['telegram_id'], name='ix_votes_telegram'),
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(fields=('project', 'phone_snapshot'), name='uq_vote_phone_per_project'),
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(fields=('project', 'user_phone_id'), name='uq_vote_userphone_per_project'),
        ),
    ]
